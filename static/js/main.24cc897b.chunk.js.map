{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Consumir","url","useState","todos","setTodos","obtenerDatos","a","fetch","data","console","log","status","json","dataJSON1","useEffect","map","item","id","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"wMA4DeA,MA5Cf,WACE,IAAMC,EAAM,6CACZ,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,uCAAG,8BAAAC,EAAA,sEACAC,MAAMN,GADN,cACbO,EADa,OAEnBC,QAAQC,IAAI,uBAAuBF,EAAKG,QAFrB,SAIKH,EAAKI,OAJV,OAIbC,EAJa,OAKnBT,EAASS,GACTJ,QAAQC,IAAIG,GANO,2CAAH,qDAWlB,OAFAC,qBAAU,WAAMT,MAAkB,IAGhC,gCACE,uCACA,kDAAqBJ,KACrB,6BAEIE,EAAMY,KAAI,SAAAC,GAAI,OACZ,+BAAmBA,EAAKC,GAAxB,MAA+BD,EAAKE,QAA3BF,EAAKC,aC1BXE,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.24cc897b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n//import './App.css';\n\n/*function Example(){\n  const [count,setCount] = useState(0);\n  useEffect(()=>{\n    console.log('hiciste click '+count+' veces');\n  });\n\n  return(\n    <div>\n      <button onClick={() => setCount(count+1)}>click</button>\n    </div>\n  )\n}*/\n\nfunction Consumir() {\n  const url = 'https://jsonplaceholder.typicode.com/todos';\n  const [todos, setTodos] = useState([]); //Hook que va a contener datos\n\n  const obtenerDatos = async() => {\n    const data = await fetch(url); //devuelve JSON\n    console.log('Respuesta obtenida: '+data.status); //200 si llego los datos\n\n    const dataJSON1 = await data.json();//donde recibir\n    setTodos(dataJSON1);//empujar datos\n    console.log(dataJSON1);\n  }\n\n  useEffect(()=>{ obtenerDatos() }, []) //hook luego de pintar todo , [] ejecutar usa sola vez\n\n  return(\n    <div>\n      <h1>Todos</h1>\n      <h2>Obtenido desde: {url}</h2>\n      <ul>\n        {\n          todos.map(item => (\n            <li key={item.id}>{item.id} : {item.title}</li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n\n\n  /*return (\n    <div>\n      { true ? 'verdadero': 'falso'}\n      <ul>\n        { !todos ? 'Cargando...' :\n            todos.map((todo,index)=>{\n            return <li>{todo.title}</li>\n        })\n        }\n      </ul>\n    </div>\n  );*/\n}\n\nexport default Consumir;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}